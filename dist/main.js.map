{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,MAAM;AAChB,OAAO,YAAY;AACnB,uCAAuC,QAAQ;AAC/C,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;AACA;AACA;;AAEyD;;;;;;;;;;;;;;;;;;ACvDrB;AACc;AAM3B;;;AAGvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,qDAAW;AAC/B,iBAAiB,kDAAQ;AACzB;;AAEe;AACf;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,IAAI,kEAAoB;AACxB;AACA,IAAI,wDAAU;AACd;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,MAAM,mEAAqB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uDAAI;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,6CAA6C,GAAG;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE,wDAAe;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,yDAAW;AAC/C,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA,EAAE,wDAAU;AACZ;AACA;;AAEA;AACA,kCAAkC,yDAAW;AAC7C;;;;;;;;;;;;;;;;ACzJe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,EAAmC;AACnC;;;;;;UC7CA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNsD;AACtD,2DAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,E","sources":["webpack://todo/./src/addToDom.js","webpack://todo/./src/createProjects.js","webpack://todo/./src/createTodos.js","webpack://todo/./src/form.js","webpack://todo/webpack/bootstrap","webpack://todo/webpack/runtime/define property getters","webpack://todo/webpack/runtime/hasOwnProperty shorthand","webpack://todo/webpack/runtime/make namespace object","webpack://todo/./src/index.js"],"sourcesContent":["export default function addProjectToDom(parentName, className, type, id, text) {\n  const element = document.createElement(type);\n  const parent = document.querySelector(parentName);\n  element.classList.add(className);\n  element.id = id;\n  parent.appendChild(element);\n  element.textContent = text;\n}\n\nexport function updateViewPortHeading(index) {\n  const viewport = document.querySelector(\".viewport\");\n  const heading = document.querySelector(\".viewport h3\");\n  viewport.classList.remove(\"hidden\");\n  const todoBtn = document.querySelector(\"#display-todo\");\n  todoBtn.classList.remove(\"hidden\");\n  const projectHeading = document.getElementById(index);\n  heading.textContent = projectHeading.textContent;\n}\n\nexport function addToDotoDom(parentName, className, type) {\n  const element = document.createElement(type);\n  const parent = document.querySelector(parentName);\n  element.classList.add(className);\n  parent.appendChild(element);\n  return element;\n}\n\nfunction updateViewForInboxes(title) {\n  const viewport = document.querySelector(\".viewport\");\n  const heading = document.querySelector(\".viewport h3\");\n  viewport.classList.remove(\"hidden\");\n  heading.textContent = title;\n  const todoBtn = document.querySelector(\"#display-todo\");\n  todoBtn.classList.add(\"hidden\");\n}\n\nfunction renderTodos({ title, description, dueDate, priority } = todo) {\n  const todo = addToDotoDom(\".todos-container\", \"todo\", \"div\");\n  todo.innerHTML = `\n    <div class=\"todocardbtn\">\n    <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n    <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n    </div> \n    <h3>${title}</h3>\n  <p>${description}</p>\n      <div class=\"duedate\">Due-date: ${dueDate}</div>\n      <div> ${priority}</div>\n      `;\n}\n\nfunction cleartodos() {\n  const todos = document.querySelector(\".todos-container\");\n  todos.innerHTML = \"\";\n}\n\nexport { renderTodos, cleartodos, updateViewForInboxes };\n","import Todo from \"./createTodos.js\";\nimport { ProjectForm, TodoForm } from \"./form.js\";\nimport addProjectToDom, {\n  updateViewPortHeading,\n  cleartodos,\n  renderTodos,\n  updateViewForInboxes\n} from \"./addToDom.js\";\n\n\nconst displayProjectBtn = document.querySelector(\".projects .btn\");\nconst addProjectBtn = document.querySelector(\".project-form #add\");\nconst displayTodoBtn = document.querySelector(\"#display-todo\");\nconst addTodoBtn = document.querySelector(\".todo-form #add\");\nconst projectsContainer = document.querySelector(\".projects-container\");\nconst alltasks = document.querySelector(\"#all-tasks\")\nconst cancelProject = document.querySelector('.project-form #cancel');\nconst cancelTodo = document.querySelector('.todo-form #cancel');\n\nconst projectForm = ProjectForm();\nconst todoForm = TodoForm();\nconst projectslist = [];\n\nexport default function checkForEventListeners() {\n  displayProjectBtn.addEventListener(\"click\", function () {\n    projectForm.display();\n  });\n\n  displayTodoBtn.addEventListener(\"click\", function () {\n    todoForm.display();\n  });\n\n  addProjectBtn.addEventListener(\"click\", function () {\n    const index = createProject(projectForm.getData());\n    updateActiveStatusForProjects(index);\n    projectForm.clearData();\n    projectForm.hide();\n    checkForProjectEventListeners();\n  });\n\n  addTodoBtn.addEventListener(\"click\", function () {\n    addTodotoProjects();\n    updateViewPortContent();\n    todoForm.clearData();\n    todoForm.hide();\n  });\n\n  alltasks.addEventListener( \"click\", function(){\n    updateViewForInboxes(\"All-Tasks\");\n    updateActiveStatusForInbox(\"all-tasks\");\n    cleartodos();\n    allTasksInbox();\n  });\n\n  cancelProject.addEventListener( \"click\", function (){\n    projectForm.clearData();\n    projectForm.hide();\n  })\n\n  cancelTodo.addEventListener ( \"click\", function () {\n    todoForm.clearData();\n    todoForm.hide();\n  })\n\n}\n\nfunction checkForProjectEventListeners() {\n  projectsContainer.querySelectorAll(\".project-card\").forEach((project) =>\n    project.addEventListener(\"click\", function (event) {\n      updateViewPortHeading(event.target.id);\n      if (\n        event.target.classList.contains(\"project-card\") &&\n        event.target.getAttribute(\"status\") !== \"active\"\n      ) {\n        event.target.setAttribute(\"status\", \"active\");\n        updateActiveStatusForProjects(event.target.id);\n        updateViewPortContent();\n      }\n    })\n  );\n}\n\n\nclass Project {\n  constructor(title) {\n    this.title = title;\n    this.todos = [];\n  }\n  setTodos([title, description, dueDate, priority] = data) {\n    this.todos.push(new Todo(title, description, dueDate, priority));\n  }\n}\n\n//changing active status\nfunction updateActiveStatusForProjects(id) {\n\n  const active = document.querySelectorAll('[status = \"active\"]');\n  active.forEach( element => element.setAttribute('status','passive'));\n\n  const projects = document.querySelectorAll(\".project-card\");\n  projects.forEach((project) => {\n    if (project.id === id) {\n      project.setAttribute(\"status\", \"active\");\n    } else {\n      project.setAttribute(\"status\", \"passive\");\n    }\n  });\n}\n\nfunction updateActiveStatusForInbox(id) {\n  const active = document.querySelectorAll('[status = \"active\"');\n  const element = document.querySelector(`#${id}`);\n  active.forEach ( el => el.setAttribute('status','passive'))\n  element.setAttribute('status', 'active');\n}\n\n//adding functions\nfunction createProject(title) {\n  const project = new Project(title);\n  projectslist.push(project);\n  addProjectToDom(\n    \".projects-container\",\n    \"project-card\",\n    \"div\",\n    projectslist.length - 1,\n    title\n  );\n  return projectslist.length - 1;\n}\n\n//rendering functions\nfunction allTasksInbox() {\n  projectslist.forEach((project) => {\n    project.todos.forEach((todo) => renderTodos(todo));\n  });\n}\n\nfunction addTodotoProjects() {\n  const index = document.querySelector('.project-card[status=\"active\"]').id;\n  const project = projectslist[index];\n  project.setTodos(todoForm.getData());\n  projectslist[index] = project; //updating after setting the todos\n}\n\nfunction updateViewPortContent() {\n  const index = document.querySelector('.project-card[status=\"active\"]').id;\n  const project = projectslist[index];\n  cleartodos();\n  renderEachProject(project);\n}\n\nfunction renderEachProject(project) {\n  project.todos.forEach((todo) => renderTodos(todo));\n}\n\n","export default class Todo {\n    constructor(title, description, dueDate, priority) {\n      this.title = title;\n      this.description = description;\n      this.dueDate = dueDate;\n      this.priority = (priority)? 'Important' : 'Not important';\n    }\n  }\n  \n  ","\nfunction ProjectForm() {\n    const projectForm = document.querySelector(\".project-form\");\n    const input = document.querySelector(\".project-form input\");\n  \n    function display() {\n      projectForm.classList.remove(\"hidden\");\n    }\n    function hide() {\n      projectForm.classList.add(\"hidden\");\n    }\n    function getData() {\n      return input.value;\n    }\n    function clearData() {\n      input.value = \"\";\n    }\n    return { display, hide, getData, clearData };\n  }\n  \n  function TodoForm() {\n    const dialog = document.querySelector('dialog');\n    const title = document.querySelector(\".todo-form #name\");\n    const date = document.querySelector(\".todo-form #date\");\n    const impStatus = document.querySelector(\".todo-form #checkbox\");\n    const description = document.querySelector(\".todo-form textarea\");\n  \n    function display() {\n     dialog.showModal();\n    }\n    function hide() {\n      dialog.close();\n    }\n    function getData() {\n      return [title.value, description.value, date.value, impStatus.checked];\n    }\n    function clearData() {\n      title.value = \"\";\n      description.value = \"\";\n      impStatus.checked = false;\n    }\n    return { display, hide, getData, clearData };\n  }\n  \n  export { ProjectForm, TodoForm };\n  ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import checkForEventListeners from \"./createProjects\";\ncheckForEventListeners();\n\n//todos\n/*\nadd icons to todolist\ndelete todolist\nedit todolist\nset todos as complete\n*/"],"names":[],"sourceRoot":""}